generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "postgresql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Sharecount {
  id           Int           @id @default(autoincrement())
  name         String
  currency     String
  expenses     Expense[]
  participants Participant[]
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt

  @@map("sharecount")
}

model Expense {
  id            Int            @id @default(autoincrement())
  name          String
  amount_total  Int            @default(0)
  date          DateTime       @default(now())
  sharecount    Sharecount?    @relation(fields: [sharecount_id], references: [id], onDelete: Cascade)
  sharecount_id Int?
  owner         Participant?   @relation(fields: [owner_id], references: [id], onDelete: Restrict)
  owner_id      Int?
  expense_info  Expense_info[]
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt

  @@map("expense")
}

model Participant {
  id            Int         @id @default(autoincrement())
  name          String
  sharecount    Sharecount? @relation(fields: [sharecount_id], references: [id], onDelete: Cascade)
  sharecount_id Int?
  created_at    DateTime    @default(now())
  updated_at    DateTime    @updatedAt
  Expense       Expense[]

  @@map("participant")
}

model Expense_info {
  id         Int      @id @default(autoincrement())
  amount     Int      @default(0)
  expense    Expense? @relation(fields: [expense_id], references: [id], onDelete: Cascade)
  expense_id Int?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("expense_info")
}
